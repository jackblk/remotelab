# nginx proxy mangager to control all ingress
# wg-easy for wireguard vpn
version: '3'
services:
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    pull_policy: always
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - 80:80
      - 81:81
      - 443:443
      - 51820:51820
    volumes:
      - ./nginx-proxy-manager/data/nginx-proxy-manager:/data
      - ./nginx-proxy-manager/data/letsencrypt:/etc/letsencrypt

  wg-easy:
    image: weejewel/wg-easy
    pull_policy: always
    container_name: wg-easy
    restart: unless-stopped
    # not needed, will be configured by nginx
    # ports:
    #   - 51820:51820/udp
    #   - 51821:51821/tcp
    volumes:
      - ./wg-easy/data:/etc/wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    env_file:
      - ./.env
    environment:
      - WG_MTU=1280
      - WG_POST_UP=iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -A INPUT -p udp -m udp --dport 51820 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE; iptables -A FORWARD -i eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT; iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
      - WG_POST_DOWN=iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE; iptables -D FORWARD -i eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT

  opentrashmail:
    image: hascheksolutions/opentrashmail
    pull_policy: always
    container_name: opentrashmail
    restart: unless-stopped
    # nginx will control
    # ports:
    #   - 25:25
    #   - 80:80
    volumes:
      - ./opentrashmail/data/:/var/www/opentrashmail/data
    environment:
      - DISCARD_UNKNOWN=true
      - DELETE_OLDER_THAN_DAYS=7
    env_file:
      - ./.env
